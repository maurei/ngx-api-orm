{"version":3,"file":"abstract-builders.js","sourceRoot":"","sources":["../../package/src/request-handlers/abstract-builders.ts"],"names":[],"mappings":"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","sourcesContent":["import { toPlural, ResourceModuleConfiguration, HttpClientOptions, HttpVerb } from '../utils';\nimport { HttpClient } from '@angular/common/http';\n\nexport namespace Abstract {\n\texport abstract class BaseBuilder {\n\t\tconstructor(protected readonly _http: HttpClient) {}\n\n\t\tpublic request(method: HttpVerb, path: string, options: HttpClientOptions, body?: any): Promise<Object> {\n\t\t\tdelete options.url;\n\t\t\tif (body) {\n\t\t\t\toptions.body = body;\n\t\t\t}\n\t\t\treturn this._http.request(method, path, options).toPromise();\n\t\t}\n\t}\n\n\texport abstract class SimpleBuilder extends BaseBuilder {\n\t\tconstructor(protected readonly _http: HttpClient, protected readonly config: ResourceModuleConfiguration) {\n\t\t\tsuper(_http);\n\t\t}\n\t\tprotected buildUrl(targetName: string, targetInstance?: any): string {\n\t\t\tlet path = (this.config.rootPath ? this.config.rootPath : '') + `/${toPlural(targetName)}/$targetId`;\n\t\t\tpath = path.replace('/$targetId', targetInstance ? `/${targetInstance.id}` : '');\n\t\t\treturn path;\n\t\t}\n\n\t\tpublic fetch(targetName: string, options: HttpClientOptions): Promise<Object> {\n\t\t\tconst path = options.url || this.buildUrl(targetName);\n\t\t\treturn <Promise<Object[]>>this.request(HttpVerb.GET, path, options);\n\t\t}\n\t\tpublic save(targetName: string, body: any, options: HttpClientOptions): Promise<Object> {\n\t\t\tconst path = options.url || this.buildUrl(targetName);\n\t\t\treturn this.request(HttpVerb.POST, path, options, body);\n\t\t}\n\t\tpublic update(targetName: string, body: any, options: HttpClientOptions): Promise<any> {\n\t\t\tconst path = options.url || this.buildUrl(targetName, body);\n\t\t\treturn this.request(HttpVerb.PATCH, path, options, body).then(() => Promise.resolve());\n\t\t}\n\t\tpublic delete(targetName: string, instance: any, options: HttpClientOptions): Promise<any> {\n\t\t\tconst path = options.url || this.buildUrl(targetName, instance);\n\t\t\treturn this.request(HttpVerb.DELETE, path, options).then(() => Promise.resolve());\n\t\t}\n\t}\n\texport abstract class ToOneBuilder extends BaseBuilder {\n\t\tconstructor(protected readonly _http: HttpClient, protected readonly config: ResourceModuleConfiguration) {\n\t\t\tsuper(_http);\n\t\t}\n\t\tprotected buildUrl(targetName: string, relatedName: string, relatedInstance: any): string {\n\t\t\tconst path = (this.config.rootPath ? this.config.rootPath : '') + `/${toPlural(relatedName)}/${relatedInstance.id}/${targetName}`;\n\t\t\treturn path;\n\t\t}\n\t\tpublic add(targetName: string, relatedName: string, body: any, relatedInstance: any, options: HttpClientOptions): Promise<void> {\n\t\t\tconst path = options.url || this.buildUrl(targetName, relatedName, relatedInstance);\n\t\t\treturn this.request(HttpVerb.PATCH, path, options, body).then(() => Promise.resolve());\n\t\t}\n\t\tpublic remove(targetName: string, relatedName: string, body: any, relatedInstance: any, options: HttpClientOptions): Promise<void> {\n\t\t\tconst path = options.url || this.buildUrl(targetName, relatedName, relatedInstance);\n\t\t\treturn this.request(HttpVerb.DELETE, path, options).then(() => Promise.resolve());\n\t\t}\n\t}\n\texport abstract class ToManyBuilder extends BaseBuilder {\n\t\tconstructor(protected readonly _http: HttpClient, protected readonly config: ResourceModuleConfiguration) {\n\t\t\tsuper(_http);\n\t\t}\n\t\tprotected buildUrl(targetName: string, relatedName: string, relatedInstance: any): string {\n\t\t\tconst path =\n\t\t\t\t(this.config.rootPath ? this.config.rootPath : '') + `/${toPlural(relatedName)}/${relatedInstance.id}/${toPlural(targetName)}`;\n\t\t\treturn path;\n\t\t}\n\t\tpublic add(targetName: string, relatedName: string, body: any, relatedInstance: any, options: HttpClientOptions): Promise<void> {\n\t\t\tconst path = options.url || this.buildUrl(targetName, relatedName, relatedInstance);\n\t\t\treturn this.request(HttpVerb.POST, path, options, body).then(() => Promise.resolve());\n\t\t}\n\t\tpublic remove(targetName: string, relatedName: string, body: any, relatedInstance: any, options: HttpClientOptions): Promise<void> {\n\t\t\tconst path = options.url || this.buildUrl(targetName, relatedName, relatedInstance);\n\t\t\treturn this.request(HttpVerb.DELETE, path, options, body).then(() => Promise.resolve());\n\t\t}\n\t}\n}\n"]}