{"version":3,"file":"to-many.js","sourceRoot":"","sources":["../../package/src/relations/to-many.ts"],"names":[],"mappings":"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","sourcesContent":["import { RelationConfiguration } from './relation-configuration';\nimport { Resource } from '../resource.core';\nimport { METAKEYS, HttpClientOptions } from '../utils';\nimport { ToManyBuilder } from '../request-handlers/default-builders';\nimport { ToManyAdapter } from '../request-handlers/default-adapters';\n\n// @dynamic\nexport class ToManyRelation<THost extends Resource, TRelated extends Resource> extends Array<TRelated> {\n\tconstructor(\n\t\tprivate readonly _hostInstance: THost,\n\t\tprivate readonly _configuration: RelationConfiguration<THost, TRelated>,\n\t\tprivate readonly _adapter: ToManyAdapter,\n\t\tprivate readonly _builder: ToManyBuilder\n\t) {\n\t\tsuper();\n\t\tconst rawObjects: Array<{}> = _hostInstance[_configuration.keyOnInstance] || null;\n\t\tif (rawObjects == null) {\n\t\t\treturn;\n\t\t}\n\t\tconst instances = Array.prototype.concat.apply([], [<TRelated[]>_configuration.RelatedResource.factory(rawObjects)]);\n\t\tthis.push(...instances);\n\t}\n\t// TODO: IMPLEMENT FETCH (LAZY GETTING OF RELATIONS)\n\t// TODO: IMPLEMENT SET (LAZY SYNC OF CHANGES: COMPLETE REPLACE)\n\n\t/*tslint:disable semicolon*/\n\t/**\n\t * Runs the add pipeline of your model for a related resource using the To-Many request adapter and builder.\n\t * @param  TRelated relatedInstance\n\t * @param  any={} options\n\t */\n\tpublic add = async (relatedInstance: TRelated, options: HttpClientOptions = {}): Promise<void> => {\n\t\tconst hostName = Reflect.getMetadata(METAKEYS.NAME, this._configuration.HostResource);\n\t\tconst relatedName = Reflect.getMetadata(METAKEYS.NAME, this._configuration.RelatedResource);\n\n\t\tif (!(relatedInstance instanceof this._configuration.RelatedResource)) {\n\t\t\tthrow new TypeError('parameter relatedInstance must be of type ' + relatedName);\n\t\t}\n\n\t\tconst body = this._adapter.add(relatedInstance, this._hostInstance);\n\t\tawait this._builder.add(relatedName, hostName, body, this._hostInstance, options);\n\t\tthis.push(relatedInstance);\n\t};\n\n\t/**\n\t * Runs the delete pipeline of your model for a related resource using the To-Many request adapter and builder.\n\t * @param  TRelated relatedInstance\n\t * @param  any={} options\n\t */\n\tpublic remove = async (relatedInstance: TRelated, options: HttpClientOptions = {}) => {\n\t\tconst hostName = Reflect.getMetadata(METAKEYS.NAME, this._configuration.HostResource);\n\t\tconst relatedName = Reflect.getMetadata(METAKEYS.NAME, this._configuration.RelatedResource);\n\n\t\tif (this.findIndex(ri => ri.id === relatedInstance.id) === -1) {\n\t\t\tthrow new RangeError('parameter relatedInstance not included in this RelatedResourceCollection');\n\t\t}\n\t\tconst body = this._adapter.remove(relatedInstance, this._hostInstance);\n\t\tawait this._builder.remove(relatedName, hostName, body, this._hostInstance, options);\n\t\tthis._removeInstance(relatedInstance);\n\t};\n\n\t/** @internal */\n\tprivate _removeInstance = (relatedInstance: TRelated) => {\n\t\tfor (let n = 0; n < this.length; n++) {\n\t\t\tif (this[n].id === relatedInstance.id) {\n\t\t\t\tthis.splice(n, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t/*tslint:enable semicolon*/\n}\n"]}