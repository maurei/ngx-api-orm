{"version":3,"file":"utils.js","sourceRoot":"","sources":["../package/src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injector, Provider } from '@angular/core';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Resource } from './resource.core';\nimport { RelationConfiguration, RelationType } from './relations/relation-configuration';\nimport { ToManyBuilder, ToOneBuilder, SimpleBuilder } from './request-handlers/default-builders';\nimport { ToManyAdapter, ToOneAdapter, SimpleAdapter } from './request-handlers/default-adapters';\n\nexport function toDash(name: string): string {\n\tconst split = name.split('');\n\tsplit[0] = split[0].toLowerCase();\n\tconst splitJoin = split.join('');\n\treturn splitJoin.replace(/([A-Z])/g, $1 => {\n\t\treturn '-' + $1.toLowerCase();\n\t});\n}\n\nexport function toPluralDash(name: string) {\n\treturn toPlural(toDash(name));\n}\n\nexport function toPlural(name: string) {\n\treturn name + 's';\n}\n\n/** @internal */\nexport let InjectorContainer: { [instance: string]: Injector | undefined } = { instance: undefined };\n\n/** @internal */\nexport function getDependencyInjectionEntries(token: any): RequestHandlers {\n\tif (InjectorContainer.instance !== undefined) {\n\t\tconst injector = InjectorContainer.instance;\n\t\tconst injectedInstance = injector.get(token);\n\t\treturn [\n\t\t\tinjectedInstance['_adapter'],\n\t\t\tinjectedInstance['_builder'],\n\t\t\tinjectedInstance['_toOneAdapter'],\n\t\t\tinjectedInstance['_toOneBuilder'],\n\t\t\tinjectedInstance['_toManyAdapter'],\n\t\t\tinjectedInstance['_toManyBuilder']\n\t\t];\n\t}\n\treturn [] as any;\n}\n\nexport enum HttpVerb {\n\tGET = 'get',\n\tPOST = 'post',\n\tPUT = 'put',\n\tPATCH = 'patch',\n\tDELETE = 'delete',\n\n}\n\n/** @internal */\nexport function initMetaData(ctor: any) {\n\tif (!Reflect.hasOwnMetadata(METAKEYS.FIELDS, ctor)) {\n\t\tReflect.defineMetadata(METAKEYS.FIELDS, [], ctor);\n\t}\n\tif (!Reflect.hasOwnMetadata(METAKEYS.ATTRIBUTES, ctor)) {\n\t\tReflect.defineMetadata(METAKEYS.ATTRIBUTES, [], ctor);\n\t}\n\tif (!Reflect.hasOwnMetadata(METAKEYS.RELATIONS, ctor)) {\n\t\tReflect.defineMetadata(METAKEYS.RELATIONS, {}, ctor);\n\t}\n\tif (!Reflect.hasOwnMetadata(METAKEYS.INSTANCES, ctor)) {\n\t\tReflect.defineMetadata(METAKEYS.INSTANCES, [], ctor);\n\t}\n}\n\n/** @internal */\nexport function updateInterceptProxyFactory(targetInstance: Resource) {\n\tconst attributes = Reflect.getMetadata(METAKEYS.ATTRIBUTES, targetInstance.constructor);\n\treturn new Proxy(targetInstance, {\n\t\tset(instance: any, key: string, value: any, proxy: any): boolean {\n\t\t\tif (attributes.indexOf(key) > -1) {\n\t\t\t\tconst updatedFields = Reflect.getMetadata(METAKEYS.UPDATED, proxy);\n\t\t\t\tconst map = Reflect.getMetadata(METAKEYS.MAP, instance, key);\n\t\t\t\tupdatedFields[map || key] = instance[key];\n\t\t\t}\n\t\t\tinstance[key] = value;\n\t\t\treturn true;\n\t\t}\n\t});\n}\n\n/** @internal */\nexport function readOnlyArrayProxyFactory(targetArray: Array<any>) {\n\tconst forbiddenMethods = ['push', 'pop', 'shift', 'unshift'];\n\treturn new Proxy(targetArray, {\n\t\tget(instance: any, key: string, proxy: any): boolean {\n\t\t\tif (forbiddenMethods.indexOf(key) > -1) {\n\t\t\t\tthrow Error(`Operation ${key} not allowed on this readonly array!`);\n\t\t\t}\n\t\t\treturn instance[key];\n\t\t}\n\t});\n}\n\nexport const METAKEYS = {\n\tFIELDS: 'orm:fields',\n\tATTRIBUTES: 'orm:attributes',\n\tRELATIONS: 'orm:relations',\n\tMAP: 'orm:map',\n\tUPDATED: 'orm:updated',\n\tINSTANCES: 'orm:instances',\n\tNAME: 'orm:name'\n};\n\n/** @internal */\nexport class ResourceModuleConfiguration {\n\trootPath?: string;\n}\n\nexport class ResourceModuleConfigurationWithProviders extends ResourceModuleConfiguration {\n\t/** Sets the API root of your app. */\n\trootPath?: string;\n\t/** Allows to conveniently register a collection of request handlers. See the guide on extendability on how to use this. Can be set to {@link JsonApiDotOrg}. */\n\trequestHandler?: Provider[];\n}\n\nexport interface Instantiable<T> {\n\tnew (...args: any[]): T;\n}\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\nexport type RawInstanceTemplate<T extends Resource> = Omit<T, keyof Resource>;\n\nexport interface ResourceType<T> extends Instantiable<T> {\n\t_instances: T[];\n\tcollection<U extends Resource>(this: ResourceType<U>): U[];\n\tfetch<U extends Resource>(this: ResourceType<U>): Promise<U[]>;\n\tfind<U extends Resource>(this: ResourceType<U>, id: number): U | undefined;\n\ttemplate<U extends Resource>(this: ResourceType<U>): RawInstanceTemplate<U>;\n\tfactory<U extends Resource>(this: ResourceType<U>, rawInstance: Array<{}>): Array<U>;\n\tfactory<U extends Resource>(this: ResourceType<U>, rawInstance: {}): U;\n}\n\nexport interface HttpClientOptions {\n\turl?: string;\n\tbody?: any;\n\theaders?: HttpHeaders | { [header: string]: string | string[] };\n\tobserve?: 'body';\n\tparams?: HttpParams | { [param: string]: string | string[] };\n\tresponseType?: 'json';\n\treportProgress?: boolean;\n\twithCredentials?: boolean;\n}\n/** @internal */\nexport type RequestHandlers = [SimpleAdapter, SimpleBuilder, ToOneAdapter, ToOneBuilder, ToManyAdapter, ToManyBuilder];\n\n/** @internal */\nexport type UnresolvedRequestHandlers = [\n\tSimpleAdapter | undefined,\n\tSimpleBuilder | undefined,\n\tToOneAdapter | undefined,\n\tToOneBuilder | undefined,\n\tToManyAdapter | undefined,\n\tToManyBuilder | undefined\n];\n"]}